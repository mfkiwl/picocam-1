.program ezspi_slave

; (MSB)<--- {TX(out_base),SCLK(in_2),nCS(in_1),RX(in_base)} --->(LSB)
; out pins : TX
; in pins  : SCLK, nCS, RX
; supports SPI slave, 32bit, Mode0, transmit only.

_start0: 
    out     x, 32           ; x <= osr (total length in bytes)
start1:
    set     y, 7            ; y = 8-1 (8bit)
    wait 0  pin 1           ; wait until nCS = Low
write0:
    wait 0  pin 2           ; wait until clock = low
    out     pins,1          ; TX <= OSR
    wait 1  pin 2           ; wait until clock = high
    ;in      pins,1          ; ISR <= RX
    jmp     y--, write0     ; loop
write1:
    jmp     x-- ,start1     ;
    wait 1  pin 1           ; wait until nCS = high
end0:
    ;mov     isr, null       ;
    jmp     _start0         ; 


% c-sdk {
static inline void ezspi_slave_program_init( PIO pio, uint32_t sm, uint32_t offset, uint32_t in_base , uint32_t in_pin_num, uint32_t out_base, uint32_t out_pin_num)
{
    /* 
     (MSB)<--- {nCS,SCLK,D3,D2,D1,D0} --->(LSB)
     dat_base : D[3:0]
     sig_base : {nCS,SCLK}
    */

    pio_sm_config c = ezspi_slave_program_get_default_config( offset );

    sm_config_set_out_pins( &c, out_base, out_pin_num);     // TX
    sm_config_set_in_pins( &c, in_base );                  // CLK,nCS,RX
    
    sm_config_set_in_shift( &c, false, true, 32);
    sm_config_set_out_shift( &c, false, true, 32);          //auto pull

    
    {
        uint32_t pin_offset;
        for ( pin_offset = 0; pin_offset < in_pin_num; pin_offset++ )
        {
            pio_gpio_init( pio, in_base + pin_offset );
        }

        for ( pin_offset = 0; pin_offset < out_pin_num; pin_offset++ )
        {
            pio_gpio_init( pio, out_base + pin_offset );
        }
    }

    pio_sm_set_consecutive_pindirs( pio, sm, out_base, out_pin_num, true );
    pio_sm_set_consecutive_pindirs( pio, sm, in_base, in_pin_num,  false );
    
    // uint32_t dat_mask = 0x03;                                   // D[3:0] = 0b0111
    // pio_sm_set_pindirs_with_mask(pio, sm, dat_mask, dat_mask );

    sm_config_set_clkdiv( &c, 1);

    pio_sm_init( pio, sm, offset, &c );
    pio_sm_set_enabled( pio, sm, true );
}
%}

